select.count.from=SELECT COUNT(*) FROM 

# BOOK ------------- ------------- ------------- ------------- ------------- ------------- --------------- -------------
# ------------- select columns -------------- -------------- -------------- --------------- -------------- -------------
select.book.columns=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount 
# ------------- queries ------------- ------------- ------------- ------------- ------------- ------------- ------------
select.all.book=FROM book INNER JOIN genre ON book.genre = genre.id AND book.deleted = FALSE
select.book.by.id=FROM book INNER JOIN genre ON book.genre = genre.id WHERE book.id = ? AND book.deleted = FALSE
select.range.books=FROM book INNER JOIN genre ON book.genre = genre.id AND book.deleted = FALSE ORDER BY book.publish_year LIMIT ? OFFSET ?
select.range.books.by.genre=FROM book INNER JOIN genre ON book.genre = genre.id AND book.deleted = FALSE AND genre.id = ? ORDER BY book.publish_year LIMIT ? OFFSET ?
select.found.books.part.one=FROM book INNER JOIN genre ON book.genre = genre.id AND book.DELETED = FALSE WHERE LOWER(book.title) LIKE LOWER('%
select.found.books.part.two=%') ORDER BY LOWER(book.title)
select.count.books.rows.number=SELECT COUNT(*) FROM book WHERE deleted = FALSE
select.count.books.by.genre.id=SELECT COUNT(*) FROM book WHERE deleted = FALSE AND genre = ?
insert.book=INSERT INTO book (title, authors, publish_year, genre, description, total_amount, cover) VALUES (?, ?, ?, ?, ?, ?, ?)
update.book=UPDATE book SET title = ?, cover = ?, authors = ?, publish_year = ?, genre = ?, description = ?, total_amount = ?, deleted = ? WHERE id LIKE ?
delete.book=DELETE FROM book WHERE id LIKE ?

# COMMENT ------------- ------------- ------------- ------------- ------------- ------------- ------------ -------------
# ------------- select columns -------------- -------------- -------------- --------------- -------------- -------------
select.comment.columns=SELECT comment.*, user.login, user.firstname, user.surname 
# ------------- queries ------------- ------------- ------------- ------------- ------------- ------------- ------------
select.all.comments.by.book.id=FROM comment, user WHERE comment.user_id = user.id AND comment.book_id = ?
select.range.comments.by.book.id=FROM comment, user WHERE comment.user_id = user.id AND comment.book_id = ? ORDER BY date LIMIT ? OFFSET ?
select.count.comments.by.book.id=SELECT COUNT(*) FROM comment WHERE book_id = ?
insert.comment=INSERT INTO comment(user_id, book_id, date, text) VALUES (?, ?, ?, ?)
delete.comment=DELETE FROM comment WHERE id LIKE ?

# ORDERS_BOOKS ------------- ------------- ------------ ------------ ------------ ------------ ----------- -------------
# ------------- select columns -------------- -------------- -------------- --------------- -------------- -------------
select.order.book.columns=SELECT user.id AS user_id, user.login, user.firstname, user.surname, user.patronymic, user.address, user.email, user.mobile_phone, book.id AS book_id, book.title, book.authors, book.publish_year, orders.id AS order_id, orders.order_date, orders.date_from, orders.date_to, orders.status 
# ------------- queries ------------- ------------- ------------- ------------- ------------- ------------ -------------
select.by.user.and.book.id=FROM orders_books INNER JOIN user ON orders_books.user_id = user.id INNER JOIN book ON orders_books.book_id = book.id INNER JOIN orders ON orders_books.order_id = orders.id WHERE orders_books.user_id = ? AND orders_books.book_id = ?
select.all.orders.books.by.order.id=FROM orders_books INNER JOIN user ON orders_books.user_id = user.id INNER JOIN book ON orders_books.book_id = book.id INNER JOIN orders ON orders_books.order_id = orders.id WHERE orders.id = ?
select.orders.books.count=SELECT COUNT(*) FROM orders_books WHERE book_id = ? AND user_id = ?
select.count.available.books.amount=SELECT book.total_amount - cnt FROM book, (SELECT COUNT(*) AS cnt FROM orders_books WHERE orders_books.book_id = ? AND orders_books.issued = TRUE) WHERE book.id = ?
select.count.orders.books.by.book.id=SELECT COUNT(*) FROM orders_books WHERE book_id = ?
select.count.orders.books.by.order.id=SELECT COUNT(*) FROM orders_books WHERE order_id = ?
insert.order.book=INSERT INTO orders_books(user_id, book_id, order_id) VALUES(?, ?, ?)
update.order.book=UPDATE orders_books SET issued = ?  WHERE user_id LIKE ? AND book_id LIKE ?
delete.order.book=DELETE FROM orders_books WHERE orders_books.user_id  LIKE ? AND orders_books.book_id LIKE ?
delete.orders.books=DELETE FROM orders_books WHERE order_id = ?

# ORDERS ------------ ------------- ------------- ------------- ------------- ------------- -------------- -------------
# ------------- select columns -------------- -------------- -------------- --------------- -------------- -------------
select.orders.columns=SELECT orders.id AS order_id, user.id AS user_id, user.login, user.firstname, user.surname, user.patronymic, user.address, user.email, user.mobile_phone, order_type.type AS order_type, orders.order_date, orders.date_from, orders.date_to, orders.status 
# ------------- queries ------------- ------------- ------------- ------------- ------------- ------------ ------------
select.order.by.id=FROM orders INNER JOIN user ON orders.user_id = user.id INNER JOIN order_type ON orders.order_type = order_type.id WHERE orders.id = ?
select.orders.range=FROM orders INNER JOIN user ON orders.user_id = user.id INNER JOIN order_type ON orders.order_type = order_type.id ORDER BY orders.order_date LIMIT ? OFFSET ?
select.range.by.user.id=FROM orders INNER JOIN user ON orders.user_id = user.id INNER JOIN order_type ON orders.order_type = order_type.id WHERE user.id = ? ORDER BY orders.order_date LIMIT ? OFFSET ?
select.range.orders.by.status=FROM orders INNER JOIN user ON orders.user_id = user.id INNER JOIN order_type ON orders.order_type = order_type.id WHERE orders.status = ? ORDER BY orders.order_date LIMIT ? OFFSET ?
select.count.orders.by.status=SELECT COUNT(*) FROM orders WHERE status = ?
select.count.orders.by.user.id=SELECT COUNT(*) FROM orders WHERE user_id = ?
insert.order=INSERT INTO orders(user_id, order_type, order_date, date_from, date_to) VALUES(?, ?, ?, ?, ?)
update.order=UPDATE orders SET date_from = ?, date_to = ?, status = ? WHERE id LIKE ?
delete.orders=DELETE FROM orders WHERE id LIKE ?

# USER ------------- ------------- ------------- ------------- -------------- ------------- -------------- -------------
# ------------- select columns -------------- -------------- -------------- --------------- -------------- -------------
select.user.columns=SELECT user.id, user.login, user.password, user.email, user.firstname, user.surname, user.patronymic, gender.type AS gender, user.address, user.mobile_phone, role.type AS role, user.status 
# ------------- queries ------------- ------------- ------------- ------------- ------------- ------------ -------------
select.user.by.id=FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id WHERE user.id = ?
select,range.users=FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id ORDER BY user.login LIMIT ? OFFSET ?
select.by.login.password=FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id WHERE login = ? AND password = ?
insert.user=INSERT INTO user (login, password, email, firstname, surname, patronymic, gender, address, mobile_phone, role) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
update.user=UPDATE user SET password = ?, email = ?, address = ?, mobile_phone = ?, role = ?, status = ? WHERE id LIKE ?
delete.user=DELETE FROM user WHERE id LIKE ?