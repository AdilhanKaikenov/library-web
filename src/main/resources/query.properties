# Book
insert.book=INSERT INTO book (title, authors, publish_year, genre, description, total_amount, cover) VALUES (?, ?, ?, ?, ?, ?, ?)
select.all.book=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount FROM (SELECT * FROM book WHERE deleted = FALSE) AS book INNER JOIN genre ON book.genre = genre.id
select.book.by.id=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount FROM (SELECT * FROM book WHERE deleted = FALSE) AS book INNER JOIN genre ON book.genre = genre.id WHERE book.id = ?
select.range.books=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount FROM (SELECT * FROM book WHERE deleted = FALSE) AS book INNER JOIN genre ON book.genre = genre.id ORDER BY book.publish_year LIMIT ? OFFSET ?
select.count.rows.number=SELECT COUNT(*) FROM book WHERE deleted = FALSE
select.count.by.genre.id=SELECT COUNT(*) FROM book WHERE deleted = FALSE AND genre = ?
select.range.books.by.genre=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount FROM (SELECT * FROM book WHERE deleted = FALSE) AS book INNER JOIN genre ON book.genre = genre.id AND genre.id = ? ORDER BY book.publish_year LIMIT ? OFFSET ?
select.found.books.part.one=SELECT book.id, book.title, book.cover, book.authors, book.publish_year, genre.type AS genre, book.description, book.total_amount FROM (SELECT * FROM book WHERE deleted = FALSE AND LOWER(book.title) LIKE LOWER('%
select.found.books.part.two=%')) AS book INNER JOIN genre ON book.genre = genre.id ORDER BY LOWER(book.title)
update.book=UPDATE book SET title = ?, cover = ?, authors = ?, publish_year = ?, genre = ?, description = ?, total_amount = ?, deleted = ? WHERE id LIKE ?

# Comment
insert.comment=INSERT INTO comment(user_id, book_id, date, text) VALUES (?, ?, ?, ?)
select.all.by.book.id=SELECT comment.*, user.login, user.firstname, user.surname FROM comment, user WHERE comment.user_id = user.id AND comment.book_id = ?
select.count.by.book.id=SELECT COUNT(*) FROM comment WHERE book_id = ?
select.range.comment.by.book.id=SELECT comment.*, user.login, user.firstname, user.surname FROM comment, user WHERE comment.user_id = user.id AND comment.book_id = ? ORDER BY date LIMIT ? OFFSET ?

# Order
insert.order=INSERT INTO orders(user_id, book_id, order_date, order_type, date_from, date_to) VALUES(?, ?, ?, ?, ?, ?)
select.by.id=SELECT orders.id, orders.user_id, orders.book_id, book.title AS book_title, orders.order_date, order_type.type AS order_type, orders.date_from, orders.date_to, order_status.type AS order_status, book.total_amount - (SELECT COUNT(*) FROM orders WHERE orders.book_id = book.id AND orders.status = 0) AS available_amount, concat(user.firstname, ' ', user.surname, ' ', user.patronymic) AS client FROM orders, order_type, book, order_status, user WHERE orders.order_type = order_type.id AND orders.book_id = book.id AND orders.status = order_status.id AND orders.user_id = user.id AND orders.id = ?
select.orders.range=SELECT orders.id, orders.user_id, orders.book_id, book.title AS book_title, orders.order_date, order_type.type AS order_type, orders.date_from, orders.date_to, order_status.type AS order_status, book.total_amount - (SELECT COUNT(*) FROM orders WHERE orders.book_id = book.id AND orders.status = 0) AS available_amount, concat(user.firstname, ' ', user.surname, ' ', user.patronymic) AS client FROM orders, order_type, book, order_status, user WHERE orders.order_type = order_type.id AND orders.book_id = book.id AND orders.status = order_status.id AND orders.user_id = user.id ORDER BY order_date LIMIT ? OFFSET ?
select.count.orders=SELECT COUNT(*) FROM orders WHERE book_id = ? AND user_id = ?
select.count.by.user.id=SELECT COUNT(*) FROM orders WHERE user_id = ?
insert.into.orders.history=INSERT INTO orders_history(user_id, book_id, order_date, order_type, date_from, date_to) VALUES(?, ?, ?, ?, ?, ?)
select.range.orders.by.user.id=SELECT orders.id, orders.user_id, orders.book_id, book.title AS book_title, orders.order_date, order_type.type AS order_type, orders.date_from, orders.date_to, order_status.type AS order_status, book.total_amount - (SELECT COUNT(*) FROM orders WHERE orders.book_id = book.id AND orders.status = 0) AS available_amount, concat(user.firstname, ' ', user.surname, ' ', user.patronymic) AS client FROM orders, order_type, book, order_status, user WHERE orders.order_type = order_type.id AND orders.book_id = book.id AND orders.status = order_status.id AND orders.user_id = user.id AND user.id = ? ORDER BY order_date LIMIT ? OFFSET ?
select.range.orders.by.status.id=SELECT orders.id, orders.user_id, orders.book_id, book.title AS book_title, orders.order_date, order_type.type AS order_type, orders.date_from, orders.date_to, order_status.type AS order_status, book.total_amount - (SELECT COUNT(*) FROM orders WHERE orders.book_id = book.id AND orders.status = 0) AS available_amount, concat(user.firstname, ' ', user.surname, ' ', user.patronymic) AS client FROM orders, order_type, book, order_status, user WHERE orders.order_type = order_type.id AND orders.book_id = book.id AND orders.status = order_status.id AND order_status.id = ? AND orders.user_id = user.id ORDER BY order_date LIMIT ? OFFSET ?
select.count.orders.by.status.id=SELECT COUNT(*) FROM orders WHERE status = ?
select.count.orders.by.book.id=SELECT COUNT(*) FROM orders WHERE book_id = ?
update.order=UPDATE orders SET date_from = ?, date_to = ?, status = ? WHERE id LIKE ?
delete.all.old.rejected.orders=DELETE FROM orders WHERE DATEDIFF('DAY', orders.order_date, CURRENT_DATE()) >= 1 AND orders.status = 1

# User
insert.user=INSERT INTO user (login, password, email, firstname, surname, patronymic, gender, address, mobile_phone, role, status) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
select.all.users=SELECT user.id, user.login, user.password, user.email, user.firstname, user.surname, user.patronymic, gender.type AS gender, user.address, user.mobile_phone, role.type AS role, user.status FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id
select.user.by.id=SELECT user.id, user.login, user.password, user.email, user.firstname, user.surname, user.patronymic, gender.type AS gender, user.address, user.mobile_phone, role.type AS role, user.status FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id WHERE user.id = ?
select,range.users=SELECT user.id, user.login, user.password, user.email, user.firstname, user.surname, user.patronymic, gender.type AS gender, user.address, user.mobile_phone, role.type AS role, user.status FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id ORDER BY user.login LIMIT ? OFFSET ?
select.by.login.password=SELECT user.id, user.login, user.password, user.email, user.firstname, user.surname, user.patronymic, gender.type AS gender, user.address, user.mobile_phone, role.type AS role, user.status FROM user INNER JOIN role ON user.role = role.id INNER JOIN gender ON user.gender = gender.id WHERE login = ? AND password = ?
update.user=UPDATE user SET password = ?, email = ?, address = ?, mobile_phone = ?, role = ?, status = ? WHERE id LIKE ?